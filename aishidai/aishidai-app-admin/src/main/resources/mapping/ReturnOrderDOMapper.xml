<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aishidai.app.dao.ReturnOrderDOMapper" >
  <resultMap id="BaseResultMap" type="com.aishidai.app.model.pojo.ReturnOrderDO" >
    <id column="return_order_id" property="returnOrderId" jdbcType="BIGINT" />
    <result column="apply_user_id" property="applyUserId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="TINYINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="apply_reason" property="applyReason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="is_receive" property="isReceive" jdbcType="TINYINT" />
    <result column="created" property="created" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="INTEGER" />
    <result column="apply_explain" property="applyExplain" jdbcType="VARCHAR" />
    <result column="is_invoice" property="isInvoice" jdbcType="TINYINT" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    return_order_id, apply_user_id, order_id, number, money, image, apply_reason, status, 
    type, is_receive, created, updated, apply_explain, is_invoice, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aishidai.app.model.pojo.ReturnOrderDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from return_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from return_order
    where return_order_id = #{returnOrderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from return_order
    where return_order_id = #{returnOrderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aishidai.app.model.pojo.ReturnOrderDOExample" >
    delete from return_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aishidai.app.model.pojo.ReturnOrderDO" >
    insert into return_order (return_order_id, apply_user_id, order_id, 
      number, money, image, 
      apply_reason, status, type, 
      is_receive, created, updated, 
      apply_explain, is_invoice, is_deleted
      )
    values (#{returnOrderId,jdbcType=BIGINT}, #{applyUserId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
      #{number,jdbcType=TINYINT}, #{money,jdbcType=DECIMAL}, #{image,jdbcType=VARCHAR}, 
      #{applyReason,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{isReceive,jdbcType=TINYINT}, #{created,jdbcType=INTEGER}, #{updated,jdbcType=INTEGER}, 
      #{applyExplain,jdbcType=VARCHAR}, #{isInvoice,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aishidai.app.model.pojo.ReturnOrderDO" >
    insert into return_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="returnOrderId != null" >
        return_order_id,
      </if>
      <if test="applyUserId != null" >
        apply_user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="applyReason != null" >
        apply_reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isReceive != null" >
        is_receive,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="applyExplain != null" >
        apply_explain,
      </if>
      <if test="isInvoice != null" >
        is_invoice,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="returnOrderId != null" >
        #{returnOrderId,jdbcType=BIGINT},
      </if>
      <if test="applyUserId != null" >
        #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="applyReason != null" >
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="isReceive != null" >
        #{isReceive,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=INTEGER},
      </if>
      <if test="applyExplain != null" >
        #{applyExplain,jdbcType=VARCHAR},
      </if>
      <if test="isInvoice != null" >
        #{isInvoice,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aishidai.app.model.pojo.ReturnOrderDOExample" resultType="java.lang.Integer" >
    select count(*) from return_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update return_order
    <set >
      <if test="record.returnOrderId != null" >
        return_order_id = #{record.returnOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.applyUserId != null" >
        apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=TINYINT},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.applyReason != null" >
        apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.isReceive != null" >
        is_receive = #{record.isReceive,jdbcType=TINYINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=INTEGER},
      </if>
      <if test="record.applyExplain != null" >
        apply_explain = #{record.applyExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.isInvoice != null" >
        is_invoice = #{record.isInvoice,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update return_order
    set return_order_id = #{record.returnOrderId,jdbcType=BIGINT},
      apply_user_id = #{record.applyUserId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      number = #{record.number,jdbcType=TINYINT},
      money = #{record.money,jdbcType=DECIMAL},
      image = #{record.image,jdbcType=VARCHAR},
      apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      is_receive = #{record.isReceive,jdbcType=TINYINT},
      created = #{record.created,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=INTEGER},
      apply_explain = #{record.applyExplain,jdbcType=VARCHAR},
      is_invoice = #{record.isInvoice,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aishidai.app.model.pojo.ReturnOrderDO" >
    update return_order
    <set >
      <if test="applyUserId != null" >
        apply_user_id = #{applyUserId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="applyReason != null" >
        apply_reason = #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="isReceive != null" >
        is_receive = #{isReceive,jdbcType=TINYINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=INTEGER},
      </if>
      <if test="applyExplain != null" >
        apply_explain = #{applyExplain,jdbcType=VARCHAR},
      </if>
      <if test="isInvoice != null" >
        is_invoice = #{isInvoice,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where return_order_id = #{returnOrderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aishidai.app.model.pojo.ReturnOrderDO" >
    update return_order
    set apply_user_id = #{applyUserId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      number = #{number,jdbcType=TINYINT},
      money = #{money,jdbcType=DECIMAL},
      image = #{image,jdbcType=VARCHAR},
      apply_reason = #{applyReason,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      is_receive = #{isReceive,jdbcType=TINYINT},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER},
      apply_explain = #{applyExplain,jdbcType=VARCHAR},
      is_invoice = #{isInvoice,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where return_order_id = #{returnOrderId,jdbcType=BIGINT}
  </update>
</mapper>