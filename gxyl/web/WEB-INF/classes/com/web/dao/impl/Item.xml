<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.IItemDao">
	<resultMap type="Item" id="item">
		<id property="itemAutoid" column="itemAutoid"/>
		<result property="flowAutoid" column="flowAutoid"/>
		<result property="itemName" column="itemName"/>
		<result property="subID" column="subID"/>
		<result property="del" column="del"/>
		<association property="flow" javaType="com.web.entity.Flow">
			<id property="flowAutoid" column="flowAutoid"/>
			<result property="itemID" column="itemID"/>
			<result property="filePath" column="filePath"/>
			<result property="fileName" column="fileName"/>
			<result property="fileSize" column="fileSize"/>
		</association>
	</resultMap>
	<resultMap type="Map" id="itemMap">
		<id property="itemAutoid" column="itemAutoid"/>
		<result property="flowAutoid" column="flowAutoid"/>
		<result property="fcAutoid" column="fcAutoid"/>
		<result property="itemName" column="itemName"/>
		<result property="subID" column="subID"/>
		<result property="itemID" column="itemID"/>
		<result property="flowName" column="flowName"/>
		<result property="fcName" column="fcName"/>
		<result property="companyID" column="companyID"/>
		<result property="period" column="period"/>
		<result property="date" column="date"/>
	</resultMap>
	<resultMap type="Map" id="itemOverMap">
		<id property="itemAutoid" column="itemAutoid"/>
		<result property="itemName" column="itemName"/>
		<result property="flowName" column="flowName"/>
		<result property="personAutoid" column="personAutoid"/>
	</resultMap>
	<resultMap type="int" id="countMap">
		<result property="count" column="count"/>
	</resultMap>
	<select id="getItemByID" resultType="item">
		select * from item where itemAutoid=#{itemAutoid}
	</select>
	<select id="getItemMapByPage" resultMap="itemMap">
		select i.*,f.itemID,f.flowName,f.companyID,f.date, fc.fcName from item i LEFT JOIN flow f on i.flowAutoid=f.flowAutoid LEFT JOIN flowcls fc on f.fcAutoid=fc.fcAutoid
		where itemAutoid &lt;=(
			select itemAutoid from item i2 LEFT JOIN flow f2 on i2.flowAutoid=f2.flowAutoid LEFT JOIN flowcls fc2 on f2.fcAutoid=fc2.fcAutoid
			where f2.personAutoid=#{personAutoid}
		<if test="parentID=='0'">
			and i2.flowAutoid in(select flowAutoid from flow where fcAutoid=#{autoid})
		</if>
		<if test="parentID=='1'">
			and i2.flowAutoid=#{autoid}
		</if>
		<if test="del!=''">
			and i2.del=#{del}
		</if>
		  	ORDER BY i2.itemAutoid desc, i2.sortIndex DESC LIMIT #{pageindex},1
		)
		and f.personAutoid=#{personAutoid}
		<if test="parentID==0">
			and i.flowAutoid in(select flowAutoid from flow where fcAutoid=#{autoid})
		</if>
		<if test="parentID==1">
			and i.flowAutoid=#{autoid}
		</if>
		<if test="del!=''">
				and i.del=#{del}
		</if>
		ORDER BY itemAutoid desc, i.sortIndex desc LIMIT #{pagesize}
	</select>
	<select id="getCount" resultMap="countMap">
		select count(*) as count from item i LEFT JOIN flow f on i.flowAutoid=f.flowAutoid LEFT JOIN flowcls fc on f.fcAutoid=fc.fcAutoid
		where f.personAutoid=#{personAutoid}
		<if test="parentID==0">
			and i.flowAutoid in(select flowAutoid from flow where fcAutoid=#{autoid})
		</if>
		<if test="parentID==1">
			and i.flowAutoid=#{autoid}
		</if>
		<if test="del!=''">
			and i.del=#{del}
		</if>		
	</select>
	
	<select id="getItemByFlow" resultMap="item">
		select i.*,f.itemID from item i inner join flow f on i.flowAutoid=f.flowAutoid where i.flowAutoid=#{flowAutoid}
		<if test="del!=''">
			and i.del=#{del}
		</if>
	</select>
	<update id="setDelByFlow">
		update item set del=#{del} where flowAutoid=#{flowAutoid}
	</update>
	<update id="setDel">
		update item set del=#{del} where itemAutoid=#{itemAutoid}
	</update>
	<insert id="create">
		insert into item(flowAutoid,itemName,subID,content,keywords,imageUrl,sortIndex)
		values(#{item.flowAutoid},#{item.itemName},#{item.subID},#{item.content},#{item.keywords},#{item.imageUrl},
		(select sortIndex from(select IFNULL(MAX(sortIndex)+1,1) as sortIndex from item) as newitem)
		)
	</insert>
	
	<delete id="deleteByFlowIds" parameterType="Map">
		delete from item where flowAutoid in 
		<foreach collection="ids" index="index" item="flowAutoid" open="(" separator="," close=")">
			#{flowAutoid}
		</foreach>
	</delete>
	
	<select id="getItemsByFlow" parameterType="Map" resultMap="item">
		select * from item where flowAutoid = #{flowAutoid} and itemAutoid
		<![CDATA[   <=   ]]> 
		(select itemAutoid from item ORDER BY itemAutoid desc limit #{pageindex},1) ORDER BY itemAutoid desc limit #{pagesize}
	</select>
	<select id="getItemsByFlowCount" parameterType="Map" resultType="java.lang.Integer">
		select count(*) from item where flowAutoid = #{flowAutoid}
	</select>
	<select id="getItemByFlowAutoid" parameterType="Map" resultMap="itemMap">
		select i.*,f.flowName from item i,flow f where i.flowAutoid=f.flowAutoid and
		f.flowAutoid=#{flowAutoid} and i.del=#{del}
	</select>
	<select id="getItemByCourseAutoid" parameterType="Map" resultMap="itemMap">
		select i.*,f.flowName from item i,flow f where i.flowAutoid=f.flowAutoid and i.del=#{del}
		and i.itemAutoid in (select ci.itemAutoid from courseitem ci where ci.courseAutoid=#{courseAutoid})
	</select>
	<select id="getItem" parameterType="Map" resultMap="itemMap">
		SELECT * FROM item WHERE del=#{del} AND itemAutoid IN (SELECT itemAutoid FROM courseitem WHERE courseAutoid=${courseAutoid})
		<if test="flowAutoid!=0">
			and flowAutoid=#{flowAutoid}
		</if>
	</select>
	<select id="getItemOverByCourseAutoid" parameterType="Map" resultMap="itemOverMap">
		SELECT DISTINCT newItem.*,IFNULL(l.personAutoid,0) AS personAutoid 
		from 
		(SELECT i.itemAutoid,i.itemName,f.flowName FROM item i,courseitem ci ,flow f WHERE i.itemAutoid=ci.itemAutoid AND f.flowAutoid=i.flowAutoid AND ci.courseAutoid=#{courseAutoid} AND i.del=#{del}) AS newItem  
		LEFT JOIN learnrec l 
		ON l.itemAutoid=newItem.itemAutoid 
	</select>
	<select id="getItemByAutoid" parameterType="Map" resultMap="itemMap">
		select i.* ,f.flowName,ci.period from item i,flow f,courseitem ci  where i.itemAutoid=#{itemAutoid} and i.flowAutoid=f.flowAutoid and ci.itemAutoid=i.itemAutoid and ci.courseAutoid=#{courseAutoid}
	</select>
	<select id="getItemByItemID" resultType="item">
		select * from item where subID=#{subID} and flowAutoid=(select flowAutoid from flow where itemID=#{itemID})
	</select>
		
	<resultMap type="Map" id="contentMap">
		<result property="itemAutoid" column="itemAutoid"/>
		<result property="itemName" column="itemName"/>
		<result property="period" column="period"/>
		<result property="personNum" column="personNum"/>
	</resultMap>
	<select id="getItemForContent" parameterType="Map" resultMap="contentMap">
		select i.*,f.flowName,ci.period,
		(select count(DISTINCT(personAutoid)) from learnrec l where l.itemAutoid = i.itemAutoid and l.courseAutoid = #{courseAutoid} ) as personNum
 		from item i  left join flow f on f.flowAutoid = i.flowAutoid left join courseitem ci on ci.itemAutoid = i.itemAutoid
		where i.itemAutoid in (select itemAutoid from courseitem where courseAutoid = #{courseAutoid}) and ci.courseAutoid = #{courseAutoid}
	</select>
	<update id="setItemByFlowSubID">
		update item set itemName=#{itemName}, del=#{del} where flowAutoid=#{flowAutoid} and subID=#{subID}
	</update>
	<select id="getItemByFlowSubID" resultType="Item">
		select * from item where flowAutoid=#{flowAutoid} and subID=#{subID}
	</select>
</mapper>