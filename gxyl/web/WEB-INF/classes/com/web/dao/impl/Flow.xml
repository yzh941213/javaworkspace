<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.IFlowDao">
	<resultMap type="Flow" id="flow">
		<id property="flowAutoid" column="flowAutoid"/>
		<result property="flowName" column="flowName"/>
		<result property="fcAutoid" column="fcAutoid"/>
		<result property="state" column="state"/>
		<result property="flowType" column="flowType"/>
		<result property="itemID" column="itemID"/>
		<result property="content" column="content"/>
		<result property="imageUrl" column="imageUrl"/>
		<result property="companyID" column="companyID"/>
		<result property="docName" column="docName"/>
		<result property="docPath" column="docPath"/>
		<result property="fileName" column="fileName"/>
		<result property="filePath" column="filePath"/>
		<result property="fileSize" column="fileSize"/>
		<result property="sortIndex" column="sortIndex"/>
		<result property="date" column="date"/>
		<result property="personAutoid" column="personAutoid"/>
		<result property="del" column="del"/>
		<association property="flowcls" javaType="com.web.entity.Flowcls">
			<id property="fcAutoid" column="fcAutoid"/>
			<result property="fcName" column="fcName"/>
		</association>
	</resultMap>
	<resultMap type="Map" id="flowMap">
		<id property="flowAutoid" column="flowAutoid"/>
		<result property="flowName" column="flowName"/>
		<result property="fcAutoid" column="fcAutoid"/>
		<result property="content" column="content"/>
		<result property="imageUrl" column="imageUrl"/>
		<result property="state" column="state"/>
		<result property="flowType" column="flowType"/>
		<result property="companyID" column="companyID"/>
		<result property="itemID" column="itemID"/>
		<result property="date" column="date"/>
		<result property="fcName" column="fcName"/>
		<result property="count" column="count"/>
		<result property="typeName" column="typeName"/>
	</resultMap>
	
	<resultMap type="Map" id="softMap">
		<id property="flowAutoid" column="flowAutoid"/>
		<result property="flowName" column="flowName"/>
		<result property="state" column="state"/>
		<result property="companyID" column="companyID"/>
		<result property="itemID" column="itemID"/>
		<result property="date" column="date"/>
		<result property="fcName" column="fcName"/>
		<result property="fcKey" column="fcKey"/>
		<result property="count" column="count"/>
		<result property="name" column="name"/>
		<result property="personAutoid" column="personAutoid"/>
	</resultMap>
	
	<resultMap type="int" id="countMap">
		<result property="count" column="count"/>
	</resultMap>
	<resultMap type="Map" id="itemMap">
		<result property="flowAutoid" column="flowAutoid"/>
		<result property="subID" column="subID"/>
		<result property="itemID" column="itemID"/>
	</resultMap>
	<resultMap type="Item" id="item">	
	</resultMap>
	<select id="getFlowByID" resultMap="flow">
		select f.*,fc.fcName from flow f left join flowcls fc on f.fcAutoid=fc.fcAutoid where flowAutoid=#{flowAutoid}
	</select>
	<select id="getFlowByfcAutoid" resultMap="flow">
		select * from flow where fcAutoid=#{fcAutoid} and personAutoid=#{personAutoid} order by sortIndex;
	</select>
	<select id="getFlowMapByID" resultMap="flowMap">
		select f.flowAutoid,f.flowName,f.state,f.itemID,f.companyID,f.date,fc.fcName,(select count(*) from item i where i.flowAutoid=f.flowAutoid) as count from flow f LEFT JOIN flowcls fc on f.fcAutoid=fc.fcAutoid
		where flowAutoid=#{flowAutoid}
	</select>
	<!-- 按照编号和子编号查找 -->
	<select id="getFlowByItemID" parameterType="Map" resultMap="itemMap">
		select f.flowAutoid, f.itemID,i.subID from item i,flow f where i.flowAutoid=f.flowAutoid and f.itemID=#{itemID} and i.subID=#{subID} and f.del='false' and i.del='false'
	</select>
	<select id="findFlowByItemID" resultMap="flow">
		select * from flow where itemID=#{itemID}
	</select>
	<!--  -->
	<select id="getFlowMapByPage" resultMap="flowMap">
		select f.flowAutoid,f.fcAutoid,f.flowName,f.content,f.imageUrl,f.state,f.flowType,f.itemID,f.companyID,f.date,fc.fcName,(select count(*) from item i where i.flowAutoid=f.flowAutoid and i.del='false') as count, 
		(case when f.flowType='soft' then '仿真软件' when f.flowType='flash' then '动画' when f.flowType='video' then '视频' else '3D动画' end) as typeName
		from flow f LEFT JOIN flowcls fc on f.fcAutoid=fc.fcAutoid 
		where f.flowAutoid &lt;=(select flowAutoid from flow where 1=1 
		<if test="fcAutoid!=0">and fcAutoid = #{fcAutoid}</if>
		<if test="state!=''">and state=#{state}</if>
		<if test="personAutoid!=0">and personAutoid=#{personAutoid}</if>
		<if test="del!=''">and del=#{del}</if>
		   ORDER BY flowAutoid desc,sortIndex DESC LIMIT #{pageindex}, 1)
		<if test="fcAutoid!=0">and f.fcAutoid = #{fcAutoid}</if>
		<if test="state!=''">and f.state=#{state}</if>
		<if test="personAutoid!=0">and f.personAutoid=#{personAutoid}</if>
		<if test="del!=''">and f.del=#{del}</if>
		ORDER BY f.flowAutoid desc,f.sortIndex DESC LIMIT #{pagesize}
	</select>
	<select id="getCount" resultMap="countMap">
		select COUNT(*) as count from flow where 1=1
		<if test="fcAutoid!=0">and fcAutoid = #{fcAutoid}</if>
		<if test="state!=''">and state=#{state}</if>
		<if test="personAutoid!=0">and personAutoid=#{personAutoid}</if>
		<if test="del!=''">and del=#{del}</if>
	</select>
	<!-- 创建仿真流程要执行以下两个insert -->
	<insert id="createFlow" parameterType="Flow" useGeneratedKeys="true" keyProperty="flowAutoid">
		insert into flow(fcAutoid,flowName,flowType,itemID,content,imageUrl,companyID,docName,docPath,fileName,filePath,fileSize,date,personAutoid,sortIndex)
		values(#{fcAutoid},#{flowName},#{flowType},#{itemID},#{content},#{imageUrl},#{companyID},#{docName},#{docPath},#{fileName},#{filePath},#{fileSize},now(),#{personAutoid},
		(select sortIndex from(select IFNULL(MAX(sortIndex)+1,1) as sortIndex from flow) as newflow)
		)
	</insert>
	<insert id="createItem">
		insert into item(flowAutoid,itemName,subID,content,keywords,imageUrl,del,sortIndex)
		values
		(#{flowAutoid},#{itemName},#{subID},#{content},#{keywords},#{imageUrl},#{del},
		(select sortIndex from(select IFNULL(MAX(sortIndex)+1,1) as sortIndex from item) as newitem)
		)
		
	</insert>
	<!-- 编辑  -->
	<update id="modify">
		update flow set fcAutoid=#{fcAutoid},flowName=#{flowName},itemID=#{itemID},content=#{content},imageUrl=#{imageUrl},
		companyID=#{companyID},docName=#{docName},docPath=#{docPath},fileName=#{fileName},filePath=#{filePath},fileSize=#{fileSize}
		where flowAutoid=#{flowAutoid}
	</update>
	<update id="setItemDel">
		update item set del=#{del} where flowAutoid in
		<foreach collection="autoids" item="flowAutoid" open="(" separator="," close=")">
			#{flowAutoid}
		</foreach>
	</update>
	<update id="setItemDelByItemAutoid">
		update item set del=#{del} where itemAutoid=#{itemAutoid}
	</update>
	
	<!-- 设置状态 -->
	<update id="setState" parameterType="Map">
		update flow set state=#{state} where flowAutoid in
		<foreach collection="autoids" item="flowAutoid" open="(" separator="," close=")">
			#{flowAutoid}
		</foreach>
	</update>
	<!-- 通过流程id返回项目 -->
	<select id="getItemByFlow" resultType="item">
		select * from item where flowAutoid=#{flowAutoid}
		<if test="del!=''">
			and del=#{del}
		</if>
	</select>
	
	<update id="setFlowDel">
		update flow set fcAutoid=NULL, del=#{del}, itemID=NULL where flowAutoid in
		<foreach collection="autoids" item="flowAutoid" open="(" separator="," close=")">
			#{flowAutoid}
		</foreach>
	</update>
	
	
	<!-- 查询出不重复的公司名称 -->
	<select id="getCompanyNotRepeat" resultType="java.lang.String">
		SELECT DISTINCT companyID FROM flow where companyID is not NULL and companyID
		 <![CDATA[  <>   ]]> "" ORDER BY companyID asc
	</select>
	
	<!-- 查询软件列表，其中有自己上传的和自己所管理的班级所有的两部分(要分页查询) -->
	<select id="getSoftByMap" parameterType="Map" resultMap="flowMap">
		select f.*,fc.fcName,(select count(*) from item i where i.flowAutoid = f.flowAutoid and i.del='false') as count,(select name from person p where p.personAutoid = f.personAutoid ) as name from flow f INNER JOIN flowcls fc on f.fcAutoid=fc.fcAutoid where f.flowAutoid <![CDATA[ <=]]>
  		(select flowAutoid from flow where 1=1 
  		<if test="companyID != ''"> and companyID = #{companyID}</if>
			and flowAutoid in(
			select flowAutoid from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and personAutoid = #{personAutoid} UNION
 			select flowAutoid from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and 
			flowAutoid in (select flowAutoid from brflow where branchAutoid in (select branchAutoid from perclazz where personAutoid = #{personAutoid}))
			) ORDER BY flowAutoid desc limit #{pageindex},1
		)
		<if test="companyID != ''"> and companyID = #{companyID}</if>
		and f.flowAutoid in(
		select flowAutoid from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and personAutoid = #{personAutoid} UNION
 		select flowAutoid from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and 
		flowAutoid in (select flowAutoid from brflow where branchAutoid in (select branchAutoid from perclazz where personAutoid = #{personAutoid}))
		)
 		ORDER BY f.flowAutoid DESC LIMIT #{pagesize}					
	</select>
	<select id="getSoftByMapCount" parameterType="Map" resultType="java.lang.Integer">
		select count(*) from
		  (select * from flow where fcAutoid = #{fcAutoid}
		  	 and state = #{state} and del = #{del} and personAutoid = #{personAutoid}
		  UNION
		  select * from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and flowAutoid in
 			(select flowAutoid from brflow where branchAutoid in
 			 (select branchAutoid from perclazz where personAutoid = #{personAutoid}))) a
 		 where 1=1
   		  <if test="companyID != ''"> and companyID = #{companyID}</if>
	</select>
	
	<delete id="deleteByIds" parameterType="Map">
		delete from flow where flowAutoid in
		<foreach collection="ids" index="index" item="flowAutoid" open="(" separator="," close=")">
			#{flowAutoid}
		</foreach>
	</delete>
	
		
	<!-- 添加仿真试卷时的软件列表 -->
	<resultMap type="Map" id="FlowPapersByMap">
		<result property="flowAutoid" column="flowAutoid"/>
		<result property="flowName" column="flowName"/>
	</resultMap>
	<select id="getFlowPapersByMap" parameterType="Map" resultMap="FlowPapersByMap">
		select a.flowAutoid,a.flowName from
		  (select * from flow where fcAutoid = #{fcAutoid}
		  	 and state = #{state} and del = #{del} and personAutoid = #{personAutoid}
		  UNION
		  select * from flow where fcAutoid = #{fcAutoid} and state = #{state} and del = #{del} and flowAutoid in
 			(select flowAutoid from brflow where branchAutoid in
 			 (select branchAutoid from perclazz where personAutoid = #{personAutoid}))) a
	</select>
	<select id="getFlowByPersonAutoid" parameterType="Map" resultMap="flow">
		SELECT f.*,fc.fcName,fc.fcKey FROM flow f,flowcls fc  WHERE f.fcAutoid=fc.fcAutoid AND fc.fcKey=#{fcKey} AND f.personAutoid=#{personAutoid} AND f.del=#{del} AND f.state=#{state}
		UNION 
		SELECT f1.*,fc1.fcName,fc1.fcKey FROM flow f1,flowcls fc1  WHERE f1.fcAutoid=fc1.fcAutoid AND fc1.fcKey=#{fcKey} AND f1.del=#{del} AND f1.state=#{state} AND
		f1.flowAutoid IN
		(SELECT flowAutoid FROM brflow WHERE branchAutoid IN
		(SELECT branchAutoid FROM perclazz WHERE personAutoid=#{personAutoid}))
	</select>
	<select id="getFlowByItemAutoid" parameterType="Integer" resultType="Flow">
		select * from flow where flowAutoid in (select flowAutoid from item where itemAutoid = #{itemAutoid})
	</select>
	
	<select id="getFlowByCourseAutoid" parameterType="Integer" resultMap="flow">
		SELECT * FROM flow WHERE flowAutoid IN  (SELECT flowAutoid FROM  item WHERE itemAutoid IN (SELECT itemAutoid FROM courseitem WHERE courseAutoid=#{courseAutoid}))
	</select>
	
	<!-- =================================学生界面数据======================================= -->
	<select id="getFlowForStudentByPage" parameterType="Map" resultMap="flowMap">
		select (select Count(*) from item i where i.flowAutoid = f.flowAutoid) as count,p.name ,f.* 
			from flow f left join person p on p.personAutoid = f.personAutoid 
			where f.flowAutoid <![CDATA[ <=]]>
			 (select flowAutoid from flow where fcAutoid = #{fcAutoid} and del = #{del} and state = #{state} and flowAutoid in
	(
		select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
		UNION
		select flowAutoid from flow where flowAutoid in (select flowAutoid from brflow where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	) ORDER BY flowAutoid desc limit #{pageindex},1)

	and f.fcAutoid = #{fcAutoid} and f.del = #{del}  and f.state = #{state} and f.flowAutoid in
	(
		select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
		UNION
		select flowAutoid from flow where flowAutoid in (select flowAutoid from brflow where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	)
 	ORDER BY f.flowAutoid desc limit #{pagesize}
	</select>
	<select id="getFlowForStudentCount" parameterType="Map" resultType="Integer">
		select count(*) from flow where fcAutoid = #{fcAutoid} and del = #{del} and flowAutoid in 
	(
	select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	UNION
	select flowAutoid from flow where flowAutoid in (select flowAutoid from brflow where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	)
	</select>
	
	<select id="getResourceForStudentByPage" parameterType="Map" resultMap="flowMap">
		select p.name ,f.* from flow f left join person p on p.personAutoid = f.personAutoid
		 where f.flowAutoid <![CDATA[<= ]]> (select flowAutoid from flow where fcAutoid = #{fcAutoid} and del = #{del}
		  and flowAutoid in
	(
	select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	UNION
	select flowAutoid from flow where personAutoid =1
	) ORDER BY flowAutoid desc limit #{pageindex},1)

		and f.fcAutoid = #{fcAutoid} and f.del = #{del} and f.flowAutoid in
	(
	select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	UNION
	select flowAutoid from flow where personAutoid =1
	)
 		ORDER BY f.flowAutoid desc limit #{pagesize}
	</select>
	<select id="getResourceForStudentcount" parameterType="Map" resultType="Integer">
		select count(*) from flow where fcAutoid = #{fcAutoid} and del = #{del} and flowAutoid in 
	(
	select flowAutoid from flow where personAutoid in (select personAutoid from perclazz where branchAutoid = (select branchAutoid from person where personAutoid = #{personAutoid}))
	UNION
	select flowAutoid from flow where personAutoid = 1
	)
	</select>
	
	<select id="getFlowForSelection" parameterType="Integer" resultMap="flow">
		select * from flow where flowAutoid in
		 (select flowAutoid from item where itemAutoid in
		  (select itemAutoid from courseitem where courseAutoid = #{courseAutoid}))
	</select>
	<select id="getFlowByNum" resultMap="flow" parameterType="Map">
		select f.*,fc.fcName from flow f left join flowcls fc on f.fcAutoid = fc.fcAutoid where f.del='false' order by f.sortIndex desc limit #{number}
	</select>
</mapper>